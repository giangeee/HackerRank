import numpy as np


from collections import Counter
def sherlockAndAnagrams(s):
    count = 0
    for i in range(1, len(s) + 1):
        str = ["".join(sorted(s[j:j + i])) for j in range(len(s) - i + 1)]
        re = Counter(str)
        for j in re:
            count += re[j] * (re[j] - 1) / 2
    print(int(count))



if __name__ == '__main__':
    q = int(input())
    for q_itr in range(q):
        s = input()

        result = sherlockAndAnagrams(s)

# word1 = input("Enter a string: ")
# word2 = input("Enter a second string: ")
#
# def isAnagram(s1, s2):
#     s1 = ''.join(sorted(word1))
#     print(s1)
#     s2 = ''.join(sorted(word2))
#     print(s2)
#     if s1 == s2:
#        print("This is an anagram")
#     else:
#        print("This is not an anagram")
#
# if __name__ == '__main__':
#     isAnagram(word1, word2)
